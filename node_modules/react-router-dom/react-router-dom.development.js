import{Router,useHref,useNavigate,useLocation,useResolvedLocation,useBlocker}from'react-router';import{createBrowserHistory,createHashHistory,createPath}from'history';import PropTypes from'prop-types';import{useRef,createElement,forwardRef,useCallback,useMemo}from'react';export{MemoryRouter,Navigate,Outlet,Route,Router,Routes,createRoutesFromArray,createRoutesFromChildren,generatePath,matchPath,matchRoutes,resolveLocation,useBlocker,useHref,useInRouterContext,useLocation,useLocationPending,useMatch,useNavigate,useOutlet,useParams,useResolvedLocation,useRoutes}from'react-router';function h(a,c){if(!a){"undefined"!==typeof console&&console.warn(c);try{throw Error(c);}catch(d){}}}function l({children:a,timeout:c,window:d}){let b=useRef(null);null==b.current&&(b.current=createBrowserHistory({window:d}));return createElement(Router,{children:a,history:b.current,timeout:c})}l.displayName="BrowserRouter";l.propTypes={children:PropTypes.node,timeout:PropTypes.number,window:PropTypes.object};
function m({children:a,timeout:c,window:d}){let b=useRef(null);null==b.current&&(b.current=createHashHistory({window:d}));return createElement(Router,{children:a,history:b.current,timeout:c})}m.displayName="HashRouter";m.propTypes={children:PropTypes.node,timeout:PropTypes.number,window:PropTypes.object};
let n=forwardRef(function({onClick:a,replace:c=!1,state:d,target:b,to:f,...k},p){let q=useHref(f),g=useNavigate(),r=useLocation(),x=useResolvedLocation(f);return createElement("a",Object.assign({},k,{href:q,onClick:function(e){a&&a(e);e.defaultPrevented||0!==e.button||b&&"_self"!==b||e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||(e.preventDefault(),(e=!!c)||(e=createPath(r)===createPath(x)),g(f,{replace:e,state:d}))},ref:p,target:b}))});n.displayName="Link";
n.propTypes={onClick:PropTypes.func,replace:PropTypes.bool,state:PropTypes.object,target:PropTypes.string,to:PropTypes.oneOfType([PropTypes.string,PropTypes.shape({pathname:PropTypes.string,search:PropTypes.string,hash:PropTypes.string})]).isRequired};
let t=forwardRef(function({"aria-current":a="page",activeClassName:c="active",activeStyle:d,className:b="",style:f,to:k,...p},q){var g=useLocation(),r=useResolvedLocation(k);a=(g=createPath(g)===createPath(r))?a:void 0;c=[b,g?c:null].filter(Boolean).join(" ");return createElement(n,Object.assign({},p,{"aria-current":a,className:c,ref:q,style:{...f,...g?d:null},to:k}))});t.displayName="NavLink";
t.propTypes={...n.propTypes,"aria-current":PropTypes.oneOf("page step location date time true".split(" ")),activeClassName:PropTypes.string,activeStyle:PropTypes.object,className:PropTypes.string,style:PropTypes.object,to:PropTypes.oneOfType([PropTypes.string,PropTypes.shape({pathname:PropTypes.string,search:PropTypes.string,hash:PropTypes.string})]).isRequired};function u({message:a,when:c}){v(a,c);return null}u.displayName="Prompt";u.propTypes={message:PropTypes.string,when:PropTypes.bool};
function v(a,c=!0){let d=useCallback(b=>{window.confirm(a)&&b.retry()},[a]);useBlocker(d,c)}function w(a=""){return new URLSearchParams("string"===typeof a||Array.isArray(a)||a instanceof URLSearchParams?a:Object.keys(a).reduce((c,d)=>{let b=a[d];return c.concat(Array.isArray(b)?b.map(a=>[d,a]):[[d,b]])},[]))}


function useSearchParams(a){h("undefined"!==typeof URLSearchParams,"You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");let c=
useRef(w(a)),d=useLocation();a=useMemo(()=>{let a=w(d.search);for(let b of c.current.keys())a.has(b)||c.current.getAll(b).forEach(c=>{a.append(b,c)});return a},[d.search]);let b=useNavigate(),f=useCallback((a,c)=>{b("?"+w(a),c)},[b]);return[a,f]};export{l as BrowserRouter,m as HashRouter,n as Link,t as NavLink,u as Prompt,w as createSearchParams,v as usePrompt,useSearchParams}
//# sourceMappingURL=react-router-dom.development.js.map
